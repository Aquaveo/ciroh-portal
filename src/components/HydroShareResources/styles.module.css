/*************************************************************
 * Responsive Grid: max 3 columns within a container
 *************************************************************/
 .gridContainer {
  display: grid;
  gap: 1rem;
  margin-top: 1rem;

  /* Start with 3 columns for wide screens */
  grid-template-columns: repeat(3, 1fr);
}

/* If screen < 1200px, drop to 2 columns */
@media (max-width: 1200px) {
  .gridContainer {
    grid-template-columns: repeat(2, 1fr);
  }
}

/* If screen < 600px, drop to 1 column */
@media (max-width: 600px) {
  .gridContainer {
    grid-template-columns: repeat(1, 1fr);
  }
}

/*************************************************************
 * Each item in the grid
 *************************************************************/
.gridItem {
  aspect-ratio: 1/1;
  border: 1px solid var(--ifm-color-emphasis-200);
  border-radius: var(--ifm-global-radius);
  background: var(--ifm-background-surface-color);
  padding: 1rem;
  box-sizing: border-box;
  overflow: hidden;
}

/*************************************************************
 * The image + overlay
 *************************************************************/
.imageWrapper {
  width: 100%;
  height: 100%;
  position: relative;
}

.image {
  width: 90%;
  height: 90%;
  object-fit: cover;
  border-radius: var(--ifm-global-radius);
  display: block;
}

/* Hover overlay (title, button, icons) */
.hoverOverlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  background: rgba(0, 0, 0, 0.5);
  opacity: 0;
  transition: opacity 0.3s ease;
  border-radius: 4px;
}

.imageWrapper:hover .hoverOverlay {
  opacity: 1;
}

/*************************************************************
 * Overlay content
 *************************************************************/
.overlayTitle {
  color: #fff;
  margin-bottom: 0.75rem;
  text-align: center;
  font-size: 1.5rem;
}

.overlayButton {
  text-decoration: none;
  font-size: 1.2rem;
  color: var(--ifm-color-primary);
  background: var(--ifm-color-content-inverse);
  padding: 0.5rem 1rem;
  border-radius: 4px;
  margin-bottom: 0.75rem;
  transition: background 0.2s, color 0.2s;
}

.overlayButton:hover {
  background: var(--ifm-color-primary-dark);
  color: var(--ifm-color-content-inverse);
}

.overlayIcons {
  display: flex;
  gap: 1rem;
}

.iconLink {
  color: #fff;
  text-decoration: none;
}

.iconLink:hover {
  color: var(--ifm-color-primary);
}


/* Wave container at bottom of heroBanner */
.waveBackground {
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 30vh;    /* Increased height for the bigger wave shape */
  z-index: 1;      /* Under text, above any deeper background */
  overflow: hidden;
}

/* The SVG itself */
.waves {
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 70%;
}

/* By default, use the light wave gradient */
.wavePaths use {
  fill: url(#wave-gradient-light);
  animation: move-waves 10s ease-in-out infinite;
}

/* If the user toggles dark mode, switch gradient to wave-gradient-dark */
:root[data-theme='dark'] .wavePaths use {
  fill: url(#wave-gradient-dark);
}

/* Animate each wave path with slight offsets */
.wavePaths use:nth-child(odd) {
  animation-direction: reverse;
  animation-duration: 13s;
}
.wavePaths use:nth-child(1) {
  animation-delay: -2s;
  opacity: 0.7;
}
.wavePaths use:nth-child(2) {
  animation-delay: -3s;
  opacity: 0.5;
}
.wavePaths use:nth-child(3) {
  animation-delay: -4s;
  opacity: 0.3;
}
.wavePaths use:nth-child(4) {
  animation-delay: -5s;
}

/* The keyframes for left-right wave animation */
@keyframes move-waves {
  0% {
    transform: translate3d(-30px, 0, 0);
  }
  50% {
    transform: translate3d(30px, 0, 0);
  }
  100% {
    transform: translate3d(-30px, 0, 0);
  }
}
